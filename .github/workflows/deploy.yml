name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to EC2
        env:
          HOST: 13.124.3.73
          USERNAME: ubuntu
          KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          API_URL_PROD: ${{ secrets.API_URL_PROD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          # SSH 키 생성 및 권한 설정
          echo "${KEY}" > key.pem
          chmod 400 key.pem

          # EC2 서버에 SSH 연결 및 배포
          ssh -o StrictHostKeyChecking=no -i key.pem $USERNAME@$HOST "
            # NVM 및 Node.js 설정
            export NVM_DIR=\$HOME/.nvm &&
            [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh &&
            nvm use 22.13.0 &&

            # 프로젝트 디렉토리로 이동 및 코드 업데이트
            cd /var/www/html &&
            git reset --hard HEAD &&
            git pull origin master &&

            # PM2 초기화
            pm2 delete all || true &&
            pm2 flush &&

            # .env 파일이 없는 경우에만 생성
            if [ ! -f .env ]; then
              echo \"API_URL=${API_URL_PROD}\" > .env &&
              echo \"DB_HOST=${DB_HOST}\" >> .env &&
              echo \"DB_USER=${DB_USER}\" >> .env &&
              echo \"DB_PASSWORD=${DB_PASSWORD}\" >> .env &&
              echo \"DB_NAME=${DB_NAME}\" >> .env
            else
              echo '.env 파일이 이미 존재합니다. 새로 생성하지 않습니다.'
            fi

            # 프론트엔드 빌드 및 실행
            cd /var/www/html/frontend &&
            npm install &&
            npm run build &&
            pm2 start npm --name 'frontend-app' -- start --prefix /var/www/html/frontend &&

            # 백엔드 설치 및 실행
            if [ -d /var/www/html/backend ]; then
              cd /var/www/html/backend &&
              npm install &&
              pm2 start /var/www/html/backend/app.js --name 'backend-app'
            else
              echo 'Backend directory not found. Skipping backend deployment.'
            fi
          "
